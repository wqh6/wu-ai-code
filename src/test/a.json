## 网站生成计划

创建一个现代化的个人博客单页面应用，包含：
- 博客文章列表展示
- 响应式设计
- 简洁现代的UI风格

[工具调用] 写入文件 package.json
```json
{
"name": "personal-blog",
"version": "1.0.0",
"scripts": {
"dev": "vite",
"build": "vite build"
},
"dependencies": {
"vue": "^3.3.4",
"vue-router": "^4.2.4"
},
"devDependencies": {
"@vitejs/plugin-vue": "^4.2.3",
"vite": "^4.4.5"
}
}
```




[工具调用] 写入文件 vite.config.js
```js
import { defineConfig } from 'vite'
import vue from '@vitejs/plugin-vue'
import { fileURLToPath, URL } from 'node:url'

export default defineConfig({
base: './',
plugins: [vue()],
resolve: {
alias: {
'@': fileURLToPath(new URL('./src', import.meta.url))
}
}
})
```




[工具调用] 写入文件 index.html
```html
<!DOCTYPE html>
<html lang="zh-CN">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<title>我的个人博客</title>
</head>
<body>
<div id="app"></div>
<script type="module" src="/src/main.js"></script>
</body>
</html>
```




[工具调用] 写入文件 src/main.js
```js
import { createApp } from 'vue'
import App from './App.vue'
import router from './router'

const app = createApp(App)
app.use(router)
app.mount('#app')
```




[工具调用] 写入文件 src/router/index.js
```js
import { createRouter, createWebHashHistory } from 'vue-router'
import Home from '@/pages/Home.vue'

const routes = [
{
path: '/',
name: 'Home',
component: Home
}
]

const router = createRouter({
history: createWebHashHistory(),
routes
})

export default router
```




[工具调用] 写入文件 src/App.vue
```vue
<template>
<div id="app">
<header class="header">
<nav class="nav">
<h1 class="logo">我的博客</h1>
<div class="nav-links">
<a href="#" class="nav-link active">首页</a>
<a href="#" class="nav-link">关于</a>
<a href="#" class="nav-link">联系</a>
</div>
</nav>
</header>

<main class="main">
<router-view />
</main>

<footer class="footer">
<p>&copy; 2024 我的个人博客. 保留所有权利.</p>
</footer>
</div>
</template>

<script setup>
</script>

<style>
* {
margin: 0;
padding: 0;
box-sizing: border-box;
}

body {
font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
line-height: 1.6;
color: #333;
}

#app {
min-height: 100vh;
display: flex;
flex-direction: column;
}

.header {
background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
color: white;
padding: 1rem 0;
}

.nav {
max-width: 1200px;
margin: 0 auto;
padding: 0 2rem;
display: flex;
justify-content: space-between;
align-items: center;
}

.logo {
font-size: 1.8rem;
font-weight: bold;
}

.nav-links {
display: flex;
gap: 2rem;
}

.nav-link {
color: white;
text-decoration: none;
transition: opacity 0.3s;
}

.nav-link:hover,
.nav-link.active {
opacity: 0.8;
}

.main {
flex: 1;
max-width: 1200px;
margin: 0 auto;
padding: 2rem;
width: 100%;
}

.footer {
background: #f8f9fa;
text-align: center;
padding: 2rem;
margin-top: auto;
}

@media (max-width: 768px) {
.nav {
flex-direction: column;
gap: 1rem;
}

.nav-links {
gap: 1rem;
}

.main {
padding: 1rem;
}
}
</style>
```




[工具调用] 写入文件 src/pages/Home.vue
```vue
<template>
<div class="home">
<section class="hero">
<h2>欢迎来到我的博客</h2>
<p>分享技术、生活和思考</p>
</section>

<section class="blog-posts">
<h3>最新文章</h3>
<div class="posts-grid">
<article
v-for="post in posts"
:key="post.id"
class="post-card"
>
<img
:src="post.image"
:alt="post.title"
class="post-image"
>
<div class="post-content">
<h4>{{ post.title }}</h4>
<p class="post-excerpt">{{ post.excerpt }}</p>
<div class="post-meta">
<span class="post-date">{{ post.date }}</span>
<span class="post-category">{{ post.category }}</span>
</div>
</div>
</article>
</div>
</section>
</div>
</template>

<script setup>
const posts = [
{
id: 1,
title: 'Vue3 组合式 API 最佳实践',
excerpt: '探索 Vue3 组合式 API 的强大功能和使用技巧，提升开发效率。',
date: '2024-01-15',
category: '前端开发',
image: 'https://picsum.photos/400/250?random=1'
},
{
id: 2,
title: '现代 CSS 布局技术',
excerpt: '学习 Flexbox 和 Grid 布局，创建响应式网页设计。',
date: '2024-01-10',
category: 'CSS',
image: 'https://picsum.photos/400/250?random=2'
},
{
id: 3,
title: 'JavaScript 异步编程',
excerpt: '深入理解 Promise、async/await 和现代异步编程模式。',
date: '2024-01-05',
category: 'JavaScript',
image: 'https://picsum.photos/400/250?random=3'
}
]
</script>

<style scoped>
.home {
max-width: 100%;
}

.hero {
text-align: center;
margin-bottom: 3rem;
padding: 2rem 0;
}

.hero h2 {
font-size: 2.5rem;
color: #333;
margin-bottom: 1rem;
}

.hero p {
font-size: 1.2rem;
color: #666;
}

.blog-posts h3 {
font-size: 2rem;
margin-bottom: 2rem;
color: #333;
}

.posts-grid {
display: grid;
grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
gap: 2rem;
}

.post-card {
background: white;
border-radius: 12px;
overflow: hidden;
box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
transition: transform 0.3s ease, box-shadow 0.3s ease;
}

.post-card:hover {
transform: translateY(-4px);
box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
}

.post-image {
width: 100%;
height: 200px;
object-fit: cover;
}

.post-content {
padding: 1.5rem;
}

.post-content h4 {
font-size: 1.3rem;
margin-bottom: 0.8rem;
color: #333;
}

.post-excerpt {
color: #666;
margin-bottom: 1rem;
line-height: 1.6;
}

.post-meta {
display: flex;
justify-content: space-between;
align-items: center;
font-size: 0.9rem;
}

.post-date {
color: #999;
}

.post-category {
background: #667eea;
color: white;
padding: 0.3rem 0.8rem;
border-radius: 20px;
font-size: 0.8rem;
}

@media (max-width: 768px) {
.hero h2 {
font-size: 2rem;
}

.posts-grid {
grid-template-columns: 1fr;
gap: 1.5rem;
}

.post-content {
padding: 1rem;
}
}
</style>
```


## 生成完毕

个人博客网站已创建完成，包含现代化的单页面设计和响应式布局。